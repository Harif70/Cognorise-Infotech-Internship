# -*- coding: utf-8 -*-
"""Task 4 -Red Wine Quality

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vWzlo8jm1XeaCCpKqJxfWT2ZUrJ-2xG7
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error,mean_absolute_error
from sklearn.metrics import accuracy_score
from math import sqrt
import matplotlib.pyplot as plt
from imblearn.combine import SMOTETomek
from sklearn.model_selection import KFold, cross_val_score
from sklearn import tree


df=pd.read_csv("/content/winequality-red.csv")
df.head()

df.tail()

df.describe()

df.shape

df.dtypes

df.isna().sum()

df.drop_duplicates()

df.duplicated().any()

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler(feature_range=(0, 1))
normal_df = scaler.fit_transform(df.iloc[:,0:-1])
normal_df = pd.DataFrame(normal_df, columns = df.iloc[:,0:-1].columns)
print(normal_df.head())

quality_dist = df['quality'].value_counts()
plt.bar(quality_dist.index, quality_dist)
plt.xlabel('quality')
plt.ylabel('frequency')
plt.show()
print(quality_dist)

fig, ax = plt.subplots(figsize=(12,8))
quality_dist = df['quality'].value_counts()
plt.bar(quality_dist.index, quality_dist)
plt.xlabel('quality')
plt.ylabel('frequency')
plt.show()
print(quality_dist)

fig, ax = plt.subplots(figsize=(12,8))
quality_dist = df['quality'].value_counts()
plt.bar(quality_dist.index, quality_dist)
plt.xlabel('quality')
plt.ylabel('frequency')
plt.show()
print(quality_dist)

def hist_plots(df):
    plt.figure(figsize=(10, 6))
    plt.hist(df)
    plt.title("Histogram Plot")
    plt.show()
hist_plots(df['fixed acidity'])

sns.kdeplot(df['chlorides'])

sns.kdeplot(df['density'])

plt.figure(figsize = (12,6))
sns.pairplot(df)
plt.show()

plt.figure(figsize = (12,6))
sns.heatmap(df.corr())
plt.show()

plt.figure(figsize = (12,6))
sns.scatterplot(x='pH', y = 'density', data = df)
plt.show()

plt.figure(figsize = (12,6))
sns.scatterplot(x='fixed acidity', y = 'pH', data = df)
plt.show()

df.hist(figsize=(11, 11))
plt.show()

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split


X=df.drop(['quality'], axis=1)
y=df['quality']


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .30, random_state = 26)
model = LinearRegression()
model.fit(X_train, y_train)

model.coef_

model.intercept_

predictions = model.predict(X_test)
predictions

from sklearn.tree import DecisionTreeClassifier
dt= DecisionTreeClassifier()
dt.fit(X_train,y_train)
predictiondt= dt.predict(X_test)
predictiondt